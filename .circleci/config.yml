# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2
defaults: &defaults
  docker:
    # specify the version you desire here
    # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
    - image: circleci/python:3.6.1

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4
    # - image: buildpack-deps:jessie

  working_directory: ~/repo

jobs:
  build:
    <<: *defaults

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-{{ .Branch }}-
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install flake8_junit
          #pip install nose tox pytest flake8-html

      - persist_to_workspace:
          root: ~/
          paths:
            - repo

      - save_cache:
          paths:
            - ./venv
            - ~/.cache/pip
          key: v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}

      - run:
          name: package bdist
          command: |
            . venv/bin/activate
            python3 setup.py check
            python3 setup.py bdist
            python3 setup.py bdist_egg
            python3 setup.py bdist_wheel
          #python3 setup.py bdist_wininst
          #python3 setup.py bdist_rpm

      - store_artifacts:
          path: dist
          destination: dist

  lint:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-{{ .Branch }}-
          - v1-dependencies-
      - attach_workspace:
          at: ~/
      # run tests!
      - run:
          name: check lint
          command: |
            . venv/bin/activate
            pylint --report=y pymaildev
            flake8 ./
            flake8_junit reports/flake8.txt test-reports/flake8_junit.xml
            pep8 ./
            pycodestyle ./
            pydocstyle ./
      #- store_test_results:
      - store_artifacts:
          path: reports
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports

  tests:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-{{ .Branch }}-
          - v1-dependencies-
      - attach_workspace:
          at: ~/
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m unittest
          #python3 setup.py test
      #- store_test_results:
      - store_artifacts:
          path: test-reports

  test-install:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-{{ .Branch }}-
          - v1-dependencies-
      - attach_workspace:
          at: ~/
      # run tests!
      - run:
          name: run test_install
          command: |
            . venv/bin/activate
            python3 setup.py install

  deploy:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-{{ .Branch }}-
          - v1-dependencies-
      - attach_workspace:
          at: ~/
      - prepare:
          command: |
            pip install twine pyopenssl ndg-httpsclient pyasn1
            python3 setup.py register
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
      - deploy:
          command: |
            python3 setup.py bdist_wheel
            twine upload dist/<paquet .whl>

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - lint:
          requires:
            - build
      - tests:
          requires:
            - lint
      - test-install:
          requires:
            - lint
          filters:
            branches:
              only:
                - develop
                - master

      - hold:
          type: approval
          requires:
            - tests
            - test-install
          filters:
            branches:
              only: _master
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only: _master
