pull_requests:
  do_not_increment_build_number: true

branches:
  except:
    - gh-pages

environment:
  matrix:
    #- _Python: C:\Python33
    #- _Python: C:\Python33-x64
    #  DISTUTILS_USE_SDK: "1"
    #  MSSdk: "1"
    #  TOX_TESTENV_PASSENV: "DISTUTILS_USE_SDK MSSdk INCLUDE LIB"
    #- _Python: C:\Python34
    #- _Python: C:\Python34-x64
    #  DISTUTILS_USE_SDK: "1"
    #  MSSdk: "1"
    #  TOX_TESTENV_PASSENV: "DISTUTILS_USE_SDK MSSdk INCLUDE LIB"
    - _Python: C:\Python35
    - _Python: C:\Python35-x64
    - _Python: C:\Python36
    - _Python: C:\Python36-x64
    #fast_finish: true

init:
  - git config --global core.autocrlf input
  - set PATH=%_Python%;%_Python%\Scripts;%PATH%

cache: '%USERPROFILE%\AppData\Local\pip\cache'

install:
  # https://packaging.python.org/guides/supporting-windows-using-appveyor/
  - cmd: IF "%DISTUTILS_USE_SDK%"=="1" "C:\Program Files\Microsoft SDKs\Windows\v7.1\Setup\WindowsSdkVer.exe" -q -version:v7.1
  - cmd: IF "%DISTUTILS_USE_SDK%"=="1" CALL "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 /release
  - git --version
  - python --version
  #- pip install --disable-pip-version-check --user --upgrade pip
  - pip --version
  - pip install twine setuptools nose coverage
  #- cmd: rem python setup.py develop
  - pip install -U "pyqt5>=5.6"
  - pip install -r requirements.txt
  - pip install flake8-junit-report
  - pylint --version
  - pep8 --version
  - pep257 --version
  - flake8 --version
  - pycodestyle --version
  - pydocstyle --version

before_build:
  - python setup.py check

build_script:
  - python setup.py build

after_build:
  - python setup.py sdist
  - python setup.py bdist
  - python setup.py bdist_dumb
  - python setup.py bdist_egg
  - python setup.py bdist_wheel
  - python setup.py bdist_wininst
  - python setup.py bdist_msi
  - dir dist

#before_test:
#  - cmd: pip install -e .[test]

test_script:
  - mkdir reports test-reports
  - python setup.py pylint flake8
  #- pydocstyle ./
  - python setup.py test_xml
  #- python setup.py nosetests --with-xunit
  #- python setup.py install

after_test:
  - flake8_junit reports/flake8.txt test-reports/flake8_junit.xml
  - ps: $wc = New-Object 'System.Net.WebClient'
  #- ps: $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test-reports\flake8_junit.xml))
  - ps: foreach($f in $(Get-ChildItem "test-reports")) {$wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", $f.FullName)}
  #- ps: $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\nosetests.xml))

artifacts:
  - path: dist\*
    name: dists
  - path: reports
  - path: test-reports

before_deploy:
  - cmd: >-
      python -c "import pymaildev; print(pymaildev.__version__, end='')" > tmpVersion
      set /p pyversion= < tmpVersion
      del tmpVersion

deploy:
  - provider: GitHub
    description: Automatic build
    auth_token:
      secure: chhFHtGs1kPKY78OkKk63o/68kHrJHkMe4W9uaQLmJXl8WjK4sKNIfgH1LXOtvYg
    artifact: dists
    draft: true
    force_update: false
    on:
      branch: master
      #appveyor_repo_tag: true

  - provider: GitHub
    #release: $(pyversion)-develop
    description: Automatic draft build
    auth_token:
      secure: chhFHtGs1kPKY78OkKk63o/68kHrJHkMe4W9uaQLmJXl8WjK4sKNIfgH1LXOtvYg
    artifact: dists
    draft: true
    prerelease: true
    force_update: true
    on:
      branch: develop

#after_deploy:

#on_success:
#on_failure:
#on_finish:
